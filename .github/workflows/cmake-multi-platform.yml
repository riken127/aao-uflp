name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        compiler: [g++, clang++]
        build_type: [Debug, Release]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build ${{ matrix.compiler == 'g++' && 'g++' || 'clang' }}

      - name: Configure CMake
        run: |
          mkdir -p out/build/x64-${{ matrix.build_type }}-${{ matrix.compiler == 'g++' && 'GCC' || 'Clang' }}
          cmake -S . -B out/build/x64-${{ matrix.build_type }}-${{ matrix.compiler == 'g++' && 'GCC' || 'Clang' }} \
            -G "Ninja" \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}

      - name: Build with Ninja
        run: |
          cd out/build/x64-${{ matrix.build_type }}-${{ matrix.compiler == 'g++' && 'GCC' || 'Clang' }}
          ninja

      - name: Run tests with CTest
        run: |
          cd out/build/x64-${{ matrix.build_type }}-${{ matrix.compiler == 'g++' && 'GCC' || 'Clang' }}
          ctest -C ${{ matrix.build_type }} -VV
